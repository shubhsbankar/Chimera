//Script preupdate dofus
//Add to agrum as .agrum/transition-preupdate
//The script will never be remove from agrum, unless explicitely remove
print("Running Dofus preupdate script...")

function symlink(target, link) {
    if(typeof File.symlink == 'function' && !File(link).exists) {
        return File.symlink(target, link)
    }
    return false
}

//Activating the correct components according to the lang of the updater
USER_LANG=api.env("USER_LANG")
COMPONENTS_MAPPING = [
    { lang: "de", component: "de" },
    { lang: "en", component: "en" },
    { lang: "es", component: "es" },
    { lang: "fr", component: "fr" },
    { lang: "it", component: "it" },
    { lang: "pt", component: "pt" },
    { lang: "ja", component: "ja" },
    { lang: "ru", component: "ru" }
];

for (var i=0,len=COMPONENTS_MAPPING.length; i<len; i++) {
   component = COMPONENTS_MAPPING[i]
   if(component.lang == USER_LANG ) {
        print("Activating component " + component.lang)
        api.activate_component(component.component, true)
   }
   else {
        api.activate_component(component.component, false)
   }
}

if(api.osname == "macosx") 
{
    api.execute(["mkdir", "-p", api.env("PROJECT_DIR") + "/../Frameworks/Adobe AIR.framework/Versions/"]) //we need to make sure the symlink dest exists
    symlink("Versions/Current/Resources", api.env("PROJECT_DIR") + "/../Frameworks/Adobe AIR.framework/Resources")
    symlink("Versions/Current/Adobe AIR", api.env("PROJECT_DIR") + "/../Frameworks/Adobe AIR.framework/Adobe AIR")
    symlink("1.0", api.env("PROJECT_DIR") + "/../Frameworks/Adobe AIR.framework/Versions/Current")

    FrameworksSymlink = File(api.env("PROJECT_DIR") +"/../Frameworks")
    FrameworksDir = File(api.env("PROJECT_DIR") +"/Frameworks")
    if(FrameworksDir.exists)
    {
        if(FrameworksSymlink.exists)
        {
            File.remove(FrameworksSymlink.abspath)
            print("Remove " + FrameworksSymlink.abspath)
        }
        File.remove(FrameworksDir.abspath)
        print("Remove " + FrameworksDir.abspath)
    }
}