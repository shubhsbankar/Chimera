####################################################################
########### Common installers / game conf generated by rocket######

#zaap configuration
ZAAP_CONFIG=false

INSTALLED = true

   MAIN_APPLICATION_DIRECTORY = PWD


    i18n.available_langs = [
        "de",
        "en",
        "es",
        "fr",
        "it",
        "ja",
        "pt",
        "ru",
    ]


    if gte(UPDATER_VERSION, 5) {
        plugins.disable *= "wakfuinterface"
        plugins.disable *= "dofusinterface"
        plugins.disable *= "krosmasterinterface"
        plugins.disable *= "krosmagainterface"
    }


   LEGACY_MONO_UPDATER = lt(UPDATER_VERSION, 4)

   ui.application_name = "Updater Dofus"

    if LEGACY_MONO_UPDATER {
        update.game.url = "http://dl.ak.ankama.com/updates/uc1"
        update.game.id  = "dofus2"
        update.game.dir = PWD
        game_name = "Dofus"
        update.game.options *= "main_project"
        update.projects *= "game"

        editor.copyright = "(c) Ankama Studio 2018"
    }
    else {
        apps."dofus2".update.projects = ["dofus2"]
        apps."dofus2".update."dofus2".url = "http://dl.ak.ankama.com/updates/uc1"
        apps."dofus2".update."dofus2".id  = "dofus2"

        apps."dofus2".dir = root
        apps."dofus2".update."dofus2".options *= "main_project"
        apps."dofus2".update."dofus2".dir = PWD

        plugins.enable *= "monogame_ui"

        ui.style.default  = "Dofus"
    }

    eula.licenses = {
                "fr" : [
                    "${PWD}/updater_data/eulas/eula_fr.html",
                ],
                "en" : [
                    "${PWD}/updater_data/eulas/eula_en.html",
                ],
                "pt" : [
                    "${PWD}/updater_data/eulas/eula_pt.html",
                ],
                "de" : [
                    "${PWD}/updater_data/eulas/eula_de.html",
                ],
                "it" : [
                    "${PWD}/updater_data/eulas/eula_it.html",
                ],
                "es" : [
                    "${PWD}/updater_data/eulas/eula_es.html",
                ],
    }
    if !LEGACY_MONO_UPDATER {
        apps."dofus2".eula = eula
        unset eula
    }





    ui.links.account_creation = {
        "fr" : "https://www.dofus.com/fr/mmorpg/jouer",
        "en" : "https://www.dofus.com/en/mmorpg/play",
        "pt" : "https://www.dofus.com/pt/mmorpg/jogar",
        "de" : "https://www.dofus.com/de/mmorpg/play",
        "it" : "https://www.dofus.com/it/mmorpg/gioca",
        "es" : "https://www.dofus.com/es/mmorpg/jugar",
    }

    ui.links.account_profil = {
        "fr" : "https://account.ankama.com/fr/votre-compte/profil",
        "en" : "https://account.ankama.com/en/your-account/profile",
        "pt" : "https://account.ankama.com/pt/sua-conta/perfil",
        "de" : "https://account.ankama.com/de/mein-account/profil",
        "it" : "https://account.ankama.com/it/il-tuo-account/profilo",
        "es" : "https://account.ankama.com/es/su-cuenta/perfil",
    }

    ui.links.account_password_forgotten = {
        "fr" : "https://account.ankama.com/fr/votre-compte/retrouver-mot-de-passe",
        "en" : "https://account.ankama.com/en/your-account/recover-your-password",
        "pt" : "https://account.ankama.com/pt/sua-conta/recupere-sua-senha",
        "de" : "https://account.ankama.com/de/mein-account/passwort-vergessen",
        "it" : "https://account.ankama.com/it/il-tuo-account/recupera-password",
        "es" : "https://account.ankama.com/es/su-cuenta/recuperar-la-contrasena",
    }

    ui.links.account_security_settings = {
        "fr" : "https://account.ankama.com/fr/votre-compte/securite",
        "en" : "https://account.ankama.com/en/your-account/security",
        "pt" : "https://account.ankama.com/pt/sua-conta/security",
        "de" : "https://account.ankama.com/de/mein-account/security",
        "it" : "https://account.ankama.com/it/il-tuo-account/security",
        "es" : "https://account.ankama.com/es/su-cuenta/security",
    }



    if equals(sys.osname, "windows") and BOOTSTRAP {
        ui.icon = "${BOOTSTRAP}@3"
        ui.game_icon = "${BOOTSTRAP}@2"
    }
    else {
        ui.icon = [
        "${PWD}/updater_data/icons/updater_icon_16x16.png",
        "${PWD}/updater_data/icons/updater_icon_24x24.png",
        "${PWD}/updater_data/icons/updater_icon_32x32.png",
        "${PWD}/updater_data/icons/updater_icon_48x48.png",
        "${PWD}/updater_data/icons/updater_icon_64x64.png",
        "${PWD}/updater_data/icons/updater_icon_128x128.png",
        "${PWD}/updater_data/icons/updater_icon_256x256.png",
        "${PWD}/updater_data/icons/updater_icon_512x512.png",
        ]

        ui.game_icon = [
        "${PWD}/updater_data/icons/game_icon_16x16.png",
        "${PWD}/updater_data/icons/game_icon_24x24.png",
        "${PWD}/updater_data/icons/game_icon_32x32.png",
        "${PWD}/updater_data/icons/game_icon_48x48.png",
        "${PWD}/updater_data/icons/game_icon_64x64.png",
        "${PWD}/updater_data/icons/game_icon_128x128.png",
        "${PWD}/updater_data/icons/game_icon_256x256.png",
        "${PWD}/updater_data/icons/game_icon_512x512.png",
        ]
    }


    ankama_account.haapi_url = "https://haapi.ankama.com/json/Ankama/v2"
    ankama_account.product_id = to_int(1.0)

    if BOOTSTRAP
        application_path = BOOTSTRAP
    else if equals(sys.osname, "macosx") {
        application_path = "${root}/Updater Dofus.app"
    }

#!Zaap

#Common Zaap / Non - Zaap
if !LEGACY_MONO_UPDATER {
    apps."dofus2".name = "Dofus"

    apps."dofus2".haapi.url =  "https://haapi.ankama.com/json/Ankama/v2"
    apps."dofus2".haapi.product_id = to_int(1.0)

    apps."dofus2".i18n.available_langs = [
        "de",
        "en",
        "es",
        "fr",
        "it",
        "ja",
        "pt",
        "ru",
    ]

    apps."dofus2".extra_translations_dir = "${PWD}/updater_data/i18n"

    apps."dofus2".ui.desktopIcon = [
        "${PWD}/updater_data/icons/game_icon_16x16.png",
        "${PWD}/updater_data/icons/game_icon_24x24.png",
        "${PWD}/updater_data/icons/game_icon_32x32.png",
        "${PWD}/updater_data/icons/game_icon_48x48.png",
        "${PWD}/updater_data/icons/game_icon_64x64.png",
        "${PWD}/updater_data/icons/game_icon_128x128.png",
        "${PWD}/updater_data/icons/game_icon_256x256.png",
        "${PWD}/updater_data/icons/game_icon_512x512.png",
    ]

        apps."dofus2".ui.icon = "${PWD}/updater_data/icons/logo_icon.png"


    apps."dofus2".copyright = "(c) Ankama Studio 2018"

    apps."dofus2".family = "dofus"

}

if INSTALLED {

####################################################################

PWD=PWD

update.transition.components *= "dofus_plugins"
plugins.disable *= "wakfuinterface"
plugins.disable *= "wakfugamelauncher"
plugins.disable *= "krosmasterinterface"
plugins.enable  *= "dofusgamelauncher"
plugins.enable  *= "opengl_diagnostic"


if equals(sys.osname, "windows") {
    dofus.binary = "${MAIN_APPLICATION_DIRECTORY}/Dofus.exe"
}
else if equals(sys.osname, "linux") {
    dofus.binary =   "${MAIN_APPLICATION_DIRECTORY}/Dofus.sh"
}
else if equals(sys.osname, "mac") {
    dofus.binary = "${MAIN_APPLICATION_DIRECTORY}/../MacOS/Dofus"
}

if LEGACY_MONO_UPDATER {

    #Do not attempt to update the game when one of these process is running
    update.game.locking_processes = [ dofus.binary ]
    update.game.components = ["all", "subscribed", "admin"]
    update.game.update_on_settings_changed = ["i18n.lang"]


    data_dir = data_location()
    if !contains(data_dir, "Ankama/${game_name}")
        data_dir = "${data_dir}/Ankama/${game_name}"

    if same_paths(data_dir, root) or _SETUP.SELF_CONTAINED
        data_dir = "${root}/user_data"
    game_datadir = "${data_dir}/game"


    #forward all updater command line arguments --dofus.XXX[= ]arg  as --XXX=arg to dofus
    #the convoluted syntax helps preserve backward compatibility for a while
    extra_args=""
    if equals (__HAS_FUNCTION, true) {
    if has_function("command_line_args") and has_function("join") and equals(extra_args, "") {
                    extra_args = join(command_line_args("dofus\\.(.+)", "\"--%(name)=%(value)\""), ' ')
            }
    }

    if _SETUP.SELF_CONTAINED
        extra_args = join(extra_args, "\"--prefs=${game_datadir}\"")

    launcher.command =
"""
"${dofus.binary}" --lang=${i18n.lang} --update-server-port=${service_port} --updater_version=v2 ${extra_args}
"""
}
else {
    apps."dofus2".launcher = {
    "class" : "DofusLauncher",
    "command" : [
            dofus.binary,
            "--update-server-port=${service_port}",
            "--lang=${i18n.lang}",
            "--updater_version=v2"
        ],
    "forward_output" : true
    }
### Steam
    if equals(target, "steam") {
        apps."dofus2".launcher.command *= "--steam"

        ui.community_menu = [
            {txt:"Steam Community", url:"http://steamcommunity.com/app/254300"}
        ]

        apps."dofus2".launcher.max_number_of_instances = 1
        apps."dofus2".launcher.send_focus_request_on_clients_limit_reached = false

        plugins.disable *= "eula"
        plugins.enable *= "ankama_account"
    }

    #Do not attempt to update the game when one of these process is running
    apps."dofus2".update."dofus2".locking_processes = [ dofus.binary ]
    apps."dofus2".update."dofus2".components = ["all", "subscribed", "admin"]
    apps."dofus2".update."dofus2".update_on_settings_changed = ["i18n.lang"]

} #LEGACY_MONO_UPDATER



if equals(sys.osname, "mac")
    application_path = "${root}/Updater Dofus.app/Contents/MacOS/Updater Dofus"

#UI
ui.carousel.sources = ["http://api.ankama.com/${i18n.lang}/dofus/carousel.json"]
ui.carousel.default = """
{ "items": [
{ "image": { "source": "::/theme/dofus/backgrounds/Illu01.png" }, "type": "image" , "default":"true"}
] }
"""

if equals(i18n.lang, "fr") ui.community_menu = [
    {txt:"Notes de mise Ã  jour", url:"https://www.dofus.com/fr/mmorpg-communaute/mises-jour"},
    {txt:"Site de la communautÃ©", url:"https://www.dofus.com/fr"},
    {txt:"Forum", url:"https://forum.dofus.com/fr"},
    {txt:"Gestion de compte", url:"https://account.ankama.com/fr/votre-compte/profil"},
    {txt:"Support", url:"https://support.ankama.com/hc/fr#dofus"}
]

else if equals(i18n.lang, "pt") ui.community_menu = [
    {txt:"ModificaÃ§Ãµes das atualizaÃ§Ãµes", url:"https://www.dofus.com/pt/mmorpg-comunidade/atualizacoes"},
    {txt:"Site da Comunidade", url:"https://www.dofus.com/pt"},
    {txt:"FÃ³rum", url:"https://forum.dofus.com/pt"},
    {txt:"GestÃ£o de conta", url:"https://account.ankama.com/pt/sua-conta/perfil"},
    {txt:"Suporte", url:"https://support.ankama.com/hc/pt"}
]

else if equals(i18n.lang, "de") ui.community_menu = [
    {txt:"Changelogs", url:"https://www.dofus.com/de/mmorpg-community/updates"},
    {txt:"Webseite", url:"https://www.dofus.com/de"},
    {txt:"Forum", url:"https://forum.dofus.com/de"},
    {txt:"Accountverwaltung", url:"https://account.ankama.com/de/mein-account/profil"},
    {txt:"Support", url:"https://support.ankama.com/hc/de"}
]

else if equals(i18n.lang, "es") ui.community_menu = [
    {txt:"Changelogs", url:"https://www.dofus.com/es/mmorpg-comunidad/actualizaciones"},
    {txt:"PaginÃ¡ de la comunidad", url:"https://www.dofus.com/es"},
    {txt:"Foros", url:"https://forum.dofus.com/es"},
    {txt:"GestiÃ³n de cuenta", url:"https://account.ankama.com/es/su-cuenta/perfil"},
    {txt:"Soporte ", url:"https://support.ankama.com/hc/es"}
]

else if equals(i18n.lang, "it") ui.community_menu = [
    {txt:"Negozio DOFUS", url:"https://forum.dofus.com/it/1008-diario-di-bordo"},
    {txt:"DOFUS.com", url:"https://www.dofus.com/it"},
    {txt:"Forum", url:"https://forum.dofus.com/it"},
    {txt:"Gestione account", url:"https://account.ankama.com/it/il-tuo-account/profilo"},
    {txt:"Supporto", url:"https://support.ankama.com/hc/it"}
]

else ui.community_menu = [
    {txt:"Changelogs", url:"https://www.dofus.com/en/mmorpg-community/updates"},
    {txt:"Homepage", url:"https://www.dofus.com/en"},
    {txt:"Forum", url:"https://forum.dofus.com/en"},
    {txt:"Account Management", url:"https://account.ankama.com/en/your-account/profile"},
    {txt:"Support", url:"https://support.ankama.com/hc/en"}
]




if !licenses
    licenses = []
extend(licenses, [
{
   name : "As3Commons",
   type : "Apache",
   version : "2.0",
   file : "${PWD}/licenses/As3Common.txt",
   website : "http://www.as3commons.org/"
},
{
   name : "As3Crypto",
   file : "${PWD}/licenses/As3Crypto.txt",
   website : "http://crypto.hurlant.com/"
},
{
   name : "As3Zip",
   type: "MIT",
   file : "${PWD}/licenses/As3Zip.txt",
   website : "http://www.nochump.com"
},
{
   name : "BloodyCrypto",
   type : "MIT",
   file : "${PWD}/licenses/BloodyCrypto.txt",
   website : "www.blooddy.by"
},
{
   name : "ColorToolkit",
   type : "MIT",
   file : "${PWD}/licenses/ColorToolkit.txt",
   website : "https://code.google.com/p/colortoolkit/"
},
{
   name : "Flint",
   type : "MIT",
   file : "${PWD}/licenses/Flint.txt",
   website : "http://flintparticles.org"
},
{
   name : "KeyPoll",
   type : "MIT",
   file : "${PWD}/licenses/KeyPoll.txt",
   website : "http://www.richardlord.net/blog"
},
{
   name : "MD5",
   file : "${PWD}/licenses/MD5.txt",
   website : "http://pajhome.org.uk/crypt/md5"
},
{
   name : "Mp3Parser",
   type : "MIT",
   file : "${PWD}/licenses/Mp3Parser.txt",
   website : "http://code.google.com/p/air-hardcore-sampler/source/browse/trunk/Tools/StandAlonePad/lib/Mp3Decoder/org/audiofx/mp3/MP3Parser.as"
}

]) #licenses


licenses *= {
   name : "FRESteamWorks",
   file : "${PWD}/licenses/FRESteamWorks.txt",
   website : "https://github.com/Ventero/FRESteamWorks"
}

if !LEGACY_MONO_UPDATER {
    apps."dofus2".licenses = licenses
    unset licenses
}


} #INSTALLED

#UI Stuff for Zaap




